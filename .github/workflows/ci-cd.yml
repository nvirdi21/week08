name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        if: matrix.service == 'frontend'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        if: matrix.service == 'backend'
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          npm install || pip install -r requirements.txt

      - name: Run tests
        run: |
          cd ${{ matrix.service }}
          npm test || pytest

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: sit722nooracr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push images
        run: |
          docker build -t sit722nooracr.azurecr.io/${{ github.repository }}:${{ github.sha }} .
          docker push sit722nooracr.azurecr.io/${{ github.repository }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: sit722nooraks
          resource-group: sit722-noor-rg

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/order-service-w08e1
          kubectl rollout status deployment/product-service-w08e1
#