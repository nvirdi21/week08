# week08/k8s/order-service.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-w08-aks
  namespace: ecomm-w08-aks
  labels:
    app: order-service
spec:
  replicas: 1 # Defaulting to 1 replica
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service-container
        image: sit722week05ex1.azurecr.io/order-service:latest
        imagePullPolicy: Always # Always pull the latest image from ACR
        ports:
        - containerPort: 8001 # FastAPI app typically runs on port 8001 for W03E3 Order Service
        env:
        # Database connection details
        - name: POSTGRES_HOST
          value: order-db-service-w08-aks # Connects to the internal K8s Service for Order DB
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: ecomm-config-w08-aks
              key: ORDERS_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: ecomm-secrets-w08-aks
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ecomm-secrets-w08-aks
              key: POSTGRES_PASSWORD
        # RabbitMQ connection for publishing order events
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: ecomm-config-w08-aks
              key: RABBITMQ_HOST
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: ecomm-secrets-w08-aks
              key: RABBITMQ_USER
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: ecomm-secrets-w08-aks
              key: RABBITMQ_PASS
        # URLs for other microservices (for synchronous communication from Order)
        - name: PRODUCT_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ecomm-config-w08-aks
              key: PRODUCT_SERVICE_URL # This will be the internal ClusterIP for the Product Service
        - name: CUSTOMER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ecomm-config-w08-aks
              key: CUSTOMER_SERVICE_URL # This will be the internal ClusterIP for the Customer Service
---
apiVersion: v1
kind: Service
metadata:
  name: order-service-w08-aks # Internal ClusterIP Service for Order Microservice
  namespace: ecomm-w08-aks
  labels:
    app: order-service
spec:
  selector:
    app: order-service
  ports:
    - protocol: TCP
      port: 8001 # The port the service listens on inside the cluster
      targetPort: 8001 # The port on the Pod (containerPort)
  type: LoadBalancer # Only accessible from within the cluster, exposed via Ingress
